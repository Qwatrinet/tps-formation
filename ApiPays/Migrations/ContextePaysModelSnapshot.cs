// <auto-generated />
using System;
using ApiPays.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPays.Migrations
{
    [DbContext(typeof(ContextePays))]
    partial class ContextePaysModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPays.Models.Pays", b =>
                {
                    b.Property<int>("PaysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaysId"));

                    b.Property<string>("CodePays")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code_pays");

                    b.Property<string>("NomPays")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nom_pays");

                    b.HasKey("PaysId");

                    b.HasIndex("CodePays")
                        .IsUnique();

                    b.HasIndex("NomPays")
                        .IsUnique();

                    b.ToTable("pays");
                });

            modelBuilder.Entity("ApiPays.Models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("ApiPays.Models.PersonneTrajet", b =>
                {
                    b.Property<int>("PersonneId")
                        .HasColumnType("int");

                    b.Property<int>("TrajetId")
                        .HasColumnType("int");

                    b.Property<bool>("estConducteur")
                        .HasColumnType("bit");

                    b.HasKey("PersonneId", "TrajetId");

                    b.HasIndex("TrajetId");

                    b.ToTable("PersonneTrajets");
                });

            modelBuilder.Entity("ApiPays.Models.Trajet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateArrivee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VilleArriveeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("VilleDepartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VilleArriveeId");

                    b.HasIndex("VilleDepartId");

                    b.ToTable("Trajets");
                });

            modelBuilder.Entity("ApiPays.Models.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodePostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code_postal");

                    b.Property<string>("NomVille")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("nom_ville");

                    b.Property<int>("PaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaysId");

                    b.HasIndex("CodePostal", "NomVille", "PaysId")
                        .IsUnique();

                    b.ToTable("ville");
                });

            modelBuilder.Entity("ApiPays.Models.PersonneTrajet", b =>
                {
                    b.HasOne("ApiPays.Models.Personne", "Personne")
                        .WithMany("PersonneTrajets")
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiPays.Models.Trajet", "Trajet")
                        .WithMany("TrajetPersonnes")
                        .HasForeignKey("TrajetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personne");

                    b.Navigation("Trajet");
                });

            modelBuilder.Entity("ApiPays.Models.Trajet", b =>
                {
                    b.HasOne("ApiPays.Models.Ville", "VilleArrivee")
                        .WithMany()
                        .HasForeignKey("VilleArriveeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiPays.Models.Ville", "VilleDepart")
                        .WithMany()
                        .HasForeignKey("VilleDepartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VilleArrivee");

                    b.Navigation("VilleDepart");
                });

            modelBuilder.Entity("ApiPays.Models.Ville", b =>
                {
                    b.HasOne("ApiPays.Models.Pays", "Pays")
                        .WithMany("Villes")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("ApiPays.Models.Pays", b =>
                {
                    b.Navigation("Villes");
                });

            modelBuilder.Entity("ApiPays.Models.Personne", b =>
                {
                    b.Navigation("PersonneTrajets");
                });

            modelBuilder.Entity("ApiPays.Models.Trajet", b =>
                {
                    b.Navigation("TrajetPersonnes");
                });
#pragma warning restore 612, 618
        }
    }
}
